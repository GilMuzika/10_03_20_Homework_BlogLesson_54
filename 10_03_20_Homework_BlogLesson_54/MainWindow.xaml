<Window x:Class="_10_03_20_Homework_BlogLesson_54.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_10_03_20_Homework_BlogLesson_54"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Title="MainWindow" Height="800" Width="825"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        WindowStartupLocation="Manual"
        FontFamily="{DynamicResource MaterialDesignFont}">
    <Window.Resources>
        <local:ViewModel x:Key="MyViewModel"></local:ViewModel>
        <DataTemplate x:Key="TextAreaTemplate">
            <StackPanel>
                <TextBox x:Name="txtpersonAge" HorizontalAlignment="Left" Height="22" Margin="32,10,0,0" TextWrapping="Wrap" Text="{Binding PersonAge, Source={StaticResource MyViewModel}}" VerticalAlignment="Top" Width="120" KeyUp="textBox_OnKeyUp"/>
                <TextBox x:Name="txtPersonHeight" HorizontalAlignment="Left" Height="22" Margin="32,20,0,0" TextWrapping="Wrap" Text="{Binding PersonHeight, Source={StaticResource MyViewModel}}" VerticalAlignment="Top" Width="120" KeyUp="textBox_OnKeyUp"/>
                <TextBox x:Name="txtpersonName" HorizontalAlignment="Left" Height="22" Margin="32,30,0,0" TextWrapping="Wrap" Text="{Binding PersonName, Source={StaticResource MyViewModel}}" VerticalAlignment="Top" Width="120"/>
                <CheckBox x:Name="chkIsSmoker" Content="Smoker" HorizontalAlignment="Left" Margin="32,40,0,0" VerticalAlignment="Top" IsChecked="{Binding IsPersonSmoker, Source={StaticResource MyViewModel}}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ListBoxTemplate">
            <StackPanel>
                <Label Content="{Binding GetProperties}" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <ListBox Margin="316,23,43,94" ItemsSource="{Binding PersonsCollectionForListBox, Source={StaticResource MyViewModel}}" SelectedIndex="{Binding ListBoxCollectionSelectedIndex, Source={StaticResource MyViewModel}}" ItemTemplate="{StaticResource ListBoxTemplate}"/>

        <ContentPresenter ContentTemplate="{StaticResource TextAreaTemplate}"/>

        <Button x:Name="btnAddNewPerson" Command="{Binding AddANewPerson_buttonClick_delegComm, Source={StaticResource MyViewModel}}" Content="Add a new person" HorizontalAlignment="Left" Margin="32,207,0,0" VerticalAlignment="Top" Width="209" Height="25"/>
        <Button x:Name="btnUpdateSelectedPerson" Command="{Binding UpdatePerson_buttonClick_delegComm, Source={StaticResource MyViewModel}}" Content="Update the selected person" HorizontalAlignment="Left" Margin="32,247,0, 0" VerticalAlignment="Top" Width="209" Height="25"/>
        <DataGrid ItemsSource="{Binding PersonsCollectionForListBox, Source={StaticResource MyViewModel}}" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="211" Margin="40,306,0,0">
            <DataGrid.Columns>
                <DataGridTextColumn Header = "Name" Binding = "{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header = "Age" Binding = "{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header = "Height" Binding = "{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTemplateColumn Header="Smoker" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSmoking, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        

    </Grid>
</Window>
